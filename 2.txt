Daniel Hewitt c402

/*
Join Queries

REQUIREMENT - Use a multi-line comment to paste the first 5 or fewer results under your query
		     Also include the total records returned.
*/

USE orderbook_activity_db;

-- 1. Display the dateJoined and username for admin users.
select username, dateJoined 
from user 
where role = 'admin';

-- 2. Display each absolute order net (share * price), status, symbol, trade date, and username.
-- Sort by the largest absolute order net (share * price) at the top.
select abs(shares * price) as netOrder, status, symbol, orderTime, username 
from `order` 
join user on `order`.userid = user.userid 
where status not in ('canceled', 'partial_canceled')
order by netOrder desc;

-- 3. Display the orderid, symbol, status, order shares, filled shares, and price for orders with fills.
select `order`.orderid, `order`.symbol, `order`.status, `order`.shares, fill.shares as filledShares, fill.price 
from `order`
join fill on `order`.orderid = fill.orderid
where fill.shares is not null;

-- 4. Display all partial_fill orders and how many outstanding shares are left.
-- Also include the username, symbol, and orderid.
select `order`.orderid, `order`.symbol, `order`.shares - sum(fill.shares) as outstandingShares, user.username
from `order`
join fill on `order`.orderid = fill.orderid
join user on `order`.userid = user.userid
where `order`.status = 'partial_fill'
group by `order`.orderid;

-- 5. Display the orderid, symbol, status, order shares, filled shares, and price for orders with fills.
-- Also include the username, role, absolute net amount of shares filled, and absolute net order.
select `order`.orderid, `order`.symbol, `order`.status, `order`.shares, fill.shares as filledShares, fill.price,
user.username, user.role, abs(fill.shares) as netShares, abs(`order`.shares * `order`.price) as netOrder
from `order`
join fill on `order`.orderid = fill.orderid
join user on `order`.userid = user.userid
order by netOrder desc;

-- 6. Display the username and user role for users who have not placed an order.
select username, role 
from user 
where userid not in (select userid from `order`);

-- 7. Display orderid, username, role, symbol, price, and number of shares for orders with no fills.
select `order`.orderid, user.username, user.role, `order`.symbol, `order`.price, `order`.shares
from `order`
join user on `order`.userid = user.userid
left join fill on `order`.orderid = fill.orderid
where fill.fillid is null;

-- 8. Display the symbol, username, role, and number of filled shares where the order symbol is WLY.
-- Include all orders, even if the order has no fills.
select `order`.symbol, user.username, user.role, coalesce(fill.shares, 0) as filledShares
from `order`
join user on `order`.userid = user.userid
left join fill on `order`.orderid = fill.orderid
where `order`.symbol = 'WLY';



